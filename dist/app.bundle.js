(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var o=r.getElementsByTagName("script");if(o.length)for(var c=o.length-1;c>-1&&(!e||!/^http(s?):/.test(e));)e=o[c--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),document.querySelector("body"),t.p,document.querySelector("body"),document.querySelector("body");document.querySelector("#root").classList.add("min-w-fit","grid","grid-cols-12","grid-rows-12","bg-black","dark:bg-white","text-black","dark:text-white","font-sans");let e=[];for(let t=0;t<localStorage.length;++t)e.push(localStorage.key(t))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,